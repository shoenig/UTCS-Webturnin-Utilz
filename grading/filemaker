#!/usr/bin/env python
# create a file called "grades.txt" which sets one up for quick
# grading and comment uploading. the format of grades.txt is:
#      grade/20  --utcsname----- Comments
# and can be uploaded to UTCS Webturnin using uploader.py
# Seth Hoenig 2012 (seth.a.hoenig@gmail.com)

import os
import shutil
import sys

keeplist = ['a.py']
pushlist = ['key.txt']

# delete everything except files listed in keeplist, so it's easier to
# see what we care about in the directory. keep in mind, files turned in
# with the wrong name will be deleted (just locally, of course)
def purge():
    for d, _, files in os.walk('./'):
        odir = d
        for f in files:
            if not f in keeplist:
                if(odir is not './'):
                    os.remove(odir + '/' + f)

# create a copy of each file in pushlist in each students directory
# for example, a common test case file, or data file
def push():
    cdir = './'
    for _, dirs, _ in os.walk(cdir):
        for dname in dirs:
            for item in pushlist:
                target = cdir + dname + '/' + item
                shutil.copy2('./' + item, target)

# actually write things to the file
def writeit(d, files, fgrades):
    missing = []
    for item in keeplist:
        if item not in files:
            missing.append(item)
    filler = ((' ' * (15 - len(d))))
    if missing:
        message = 'Missing File[s]: %s' % str(missing)
        print >>fgrades, '00/20   %s %s %s' % \
            (str(d)[2:], filler, message)
    else:
        print >>fgrades, '##/20   %s %s ' % \
            (str(d)[2:], filler)

# grab all the user names from the folders, and put them in a text file
# with other info. if the user does not have one or more of the files
# in the keeplist, give them a grade of 0 (this will show up in the
# grade/comment file)
def setup_grade_file(splitDirectory, grader, wantedList=None):
    with open('./grades.txt', 'w') as fgrades:
        for d, _, files in os.walk('./'):
            if d is not './':
                if splitDirectory:
                    if grader in ('seth',):
                        if (ord(d[2]) >= ord('a') and ord(d[2]) <= ord('j')) \
                                or (ord(d[2]) >= ord('A') and ord(d[2]) <= ord('J')):
                            writeit(d, files, fgrades)
                    else: # probably Tyler
                        if (ord(d[2]) >= ord('k') and ord(d[2]) <= ord('z')) \
                                or (ord(d[2]) >= ord('K') and ord(d[2]) <= ord('Z')):
                            writeit(d, files, fgrades)
                else:
                    writeit(d, files, fgrades)
                

# program begins here
if __name__ == '__main__':
    if len(sys.argv) != 3:
        print 'usage: filemaker <classno> <gradername>'
        sys.exit(1)
    purge()
    push()
    if sys.argv[1] not in ('52745', '52750', '52755'):
        print 'invalid class number: %s', sys.argv[1]
        sys.exit(1)
    if sys.argv[2] not in ('seth', 'tyler'):
        print 'invalid name: %s', sys.argv[2]
        sys.exit(1)
    split = True if sys.argv[1] in ('52750',) else False
    setup_grade_file(split, sys.argv[2])


# usage example (sitting in directory 52750)
#  filemaker 52750 seth
