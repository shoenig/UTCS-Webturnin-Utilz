#!/usr/bin/env python
# upload grades.txt to UTCS Webturnin
# Seth Hoenig 2012 (seth.a.hoenig@gmail.com)

import getopt
import os
import gutilz
import sys

# read grades.txt and return a list of records
# a record is a tuple in the form: (utcsname, comment)
def slurp_grades():
    with open('./grades.txt') as gradesf:
        records = []
        for line in gradesf.readlines():
            sp = line.split()
            utcsid = sp[1]
            eid = sp[2]
            comment = gutilz.join_comment(sp)
            records.append( (utcsid, eid, comment) )
        return records

# instead of uploading to Webturnin, just create the comment files
# with utcs-usernames appended to them
def create_comment_files(assignment):
    for record in slurp_grades():
        if record[2] in ('',): # skip people with no comments
            continue
        # make utcs-A#.txt file
        eid = '???' if record[1] in ('NO-FILE', 'ERROR') else record[1]
        fname = record[0] + '-' + eid + '-A' + assignment + '.txt'
        with open('/tmp/'+fname, 'w') as tempf:
            print >>tempf, record[2]

def get_login_info():
    usrnm = raw_input('UTCS Username: ')
    passwd = raw_input('UTCS Password: ')
    course = raw_input('Course: ')
    assin = raw_input('Assignment #: ')
    return (usrnm, passwd, course, assin)

def login(usrnm, passwd):
    cmd = 'curl -c cookies.txt ' + \
        '-d \"username=' + usrnm + '\" ' + \
        '-d \"password=' + passwd + '\" ' + \
        '--insecure ' + \
        '-H "Expect:" ' + \
        '\"' + gutilz.LOGIN_URL + '\"'
    print 'cmd: %s' % cmd
    os.system(cmd)

# THIS IS BROKEN :'(
# Webturnin does not provide any error messages at this point, so I think
# the files are technically getting uploaded, but not into the actual
# user directories
def upload_comments(u, p, c, a):
    for record in slurp_grades():
        if record[1] in ('',): # skip people with no comments
            continue
        # make an A#.txt file in /tmp for every comment file
        with open('/tmp/A' + a + '.txt', 'w') as tempf:
            # print record
            print >>tempf, record[1]
            # magical upload part
            cmd = 'curl -F "class=' + c  + '.GRADER' + '" ' + \
                '-F \"user=' + record[0] + '\" ' + \
                '-F \"file=@/tmp/A' + a + '.txt;filename=A'+ a + '.txt\" ' \
                '--insecure ' + \
                '-H "Expect:" ' + \
                '-b cookies.txt -c cookies.txt ' + \
                '--url \"' + gutilz.URL + '\" '
            print ''
            print ''
            print cmd + '\n'
            os.system(cmd)

if __name__ == '__main__':
    try:
        opts, args = getopt.getopt(sys.argv[1:], 'uc', ['upload', 'create'])
    except getopt.GetoptError, err:
        print str(err)
        print '-- You\'re using it wrong! --'
        sys.exit(2)
    upload = False
    create = False
    for o, a in opts:
        if o in ('-u', '--upload'):
            upload = True
        elif o in ('-c', '--create'):
            create = True
        else:
            print 'Unknown Option: %s' % (o,)
            sys.exit(2)

    if not upload and not create:
        print 'Must specify at least one of --create, --upload'
        sys.exit(2)

    if upload:
        print 'Uploading is currently broken :\'('
    # do something on upload
    #u, p, c, a = get_login_info()
    #login(u, p)
    #upload_comments(u, p, c, a)

    if create:
        assi = raw_input('Assignemnt #: ')
        create_comment_files(assi)
